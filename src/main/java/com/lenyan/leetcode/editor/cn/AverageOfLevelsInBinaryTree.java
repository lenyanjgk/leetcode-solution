//637 ‰∫åÂèâÊ†ëÁöÑÂ±ÇÂπ≥ÂùáÂÄº average-of-levels-in-binary-tree
//2024-12-31 10:54:39

package com.lenyan.leetcode.editor.cn;


import com.lenyan.leetcode.editor.cn.model.TreeNode;

import java.util.ArrayList;
import java.util.Deque;
import java.util.LinkedList;
import java.util.List;

public class AverageOfLevelsInBinaryTree{
    public static void main(String[] args) {
        Solution solution = new AverageOfLevelsInBinaryTree().new Solution();
    }
    
    //leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> list = new ArrayList<>();
        Deque<TreeNode> que = new LinkedList<>();

        if (root == null) {
            return list;
        }

        que.offerLast(root);
        while (!que.isEmpty()) {

            int levelSize = que.size();
            double levelSum = 0.0;
            for (int i = 0; i < levelSize; i++) {
                TreeNode poll = que.pollFirst();

                levelSum += poll.val;

                if (poll.left != null) {
                    que.addLast(poll.left);
                }
                if (poll.right != null) {
                    que.addLast(poll.right);
                }
            }
            list.add(levelSum / levelSize);
        }
        return list;
    }
}
//leetcode submit region end(Prohibit modification and deletion)

    
}


////ÁªôÂÆö‰∏Ä‰∏™ÈùûÁ©∫‰∫åÂèâÊ†ëÁöÑÊ†πËäÇÁÇπ
// root , ‰ª•Êï∞ÁªÑÁöÑÂΩ¢ÂºèËøîÂõûÊØè‰∏ÄÂ±ÇËäÇÁÇπÁöÑÂπ≥ÂùáÂÄº„ÄÇ‰∏éÂÆûÈôÖÁ≠îÊ°àÁõ∏Â∑Æ 10‚Åª‚Åµ ‰ª•ÂÜÖÁöÑÁ≠îÊ°àÂèØ‰ª•Ë¢´Êé•Âèó„ÄÇ 
//
// 
//
// Á§∫‰æã 1Ôºö 
//
// 
//
// 
//ËæìÂÖ•Ôºöroot = [3,9,20,null,null,15,7]
//ËæìÂá∫Ôºö[3.00000,14.50000,11.00000]
//Ëß£ÈáäÔºöÁ¨¨ 0 Â±ÇÁöÑÂπ≥ÂùáÂÄº‰∏∫ 3,Á¨¨ 1 Â±ÇÁöÑÂπ≥ÂùáÂÄº‰∏∫ 14.5,Á¨¨ 2 Â±ÇÁöÑÂπ≥ÂùáÂÄº‰∏∫ 11 „ÄÇ
//Âõ†Ê≠§ËøîÂõû [3, 14.5, 11] „ÄÇ
// 
//
// Á§∫‰æã 2: 
//
// 
//
// 
//ËæìÂÖ•Ôºöroot = [3,9,20,15,7]
//ËæìÂá∫Ôºö[3.00000,14.50000,11.00000]
// 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// 
//
// 
// Ê†ë‰∏≠ËäÇÁÇπÊï∞ÈáèÂú® [1, 10‚Å¥] ËåÉÂõ¥ÂÜÖ 
// -2¬≥¬π <= Node.val <= 2¬≥¬π - 1 
// 
//
// Related Topics Ê†ë Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ ÂπøÂ∫¶‰ºòÂÖàÊêúÁ¥¢ ‰∫åÂèâÊ†ë üëç 509 üëé 0
